####### Cyclos configuration ########

### HTTPS configuration - Not supported on standalone server
# Enable HTTPS security
cyclos.security.enable=false
# HTTP port
cyclos.security.port.http=8080
# HTTPS port
cyclos.security.port.https=8443

### Skip all database initialization tests
cyclos.database.skipTests = false

### Embedded mode - when true, create the database if it's not found
cyclos.embedded.enable = true
### Embedded sms mode - when true and if cyclos.embedded.enable is true too then it will create the sms data
cyclos.embedded.sms.enable = false
### Database language when the database is created with the embedded mode
cyclos.embedded.locale = en_US
### Default logs directory - Don't change this on standalone server
cyclos.default.logDir=logs
cyclos.default.logPrefix=cyclos_

### Automatically apply schema upgrades for new versions. Recommended.
cyclos.autoSchemaUpgrade.enable = true

### Create a new session after login 
# This helps improving security, but there is a case where using specific Joomla templates
# and including Cyclos on an iframe caused problems in Internet Explorer, where after logging in,
# the user was redirected back to the login page, as IE didn't catch the new session cookie.
cyclos.newSessionAfterLogin = true

# Disk cache for images. Highly recommended for production, as will drastically reduce the database traffic
cyclos.imageDiskCache.enable = true

# Which accounts will be locked on payments. Possible values are:
# * none: No accounts will be locked, and no extra DB transaction will be used. Should be enough in most cases, 
#       but concurrent payments from the same account could make it go below it's lower credit limit or above the upper limit.
# * origin: Locks the origin account. Will never allow it to go below the limit. Other accounts may get higher 
#       than the upper limit on concurrent payments. Uses a separated DB transaction for the payment.
# * all: Locks all involved accounts, even in fees. Absolutely guarantees that no account will go beyond the lower or upper limit,
#       but might impact performance, specially if an account receives lots of payments (specially with transaction fees).
#       Uses a separated DB transaction for the payment.
### Important: If using HSQLDB, the only supported option is none (otherwise, payments won't work). Other values are only usable with MySQL 
cyclos.lockedAccountsOnPayments = none

# Maximum threads used on mail sender. Setting to zero means no e-mail will be sent at all, and shouldn't be used on production
# For production, recommended values varies from 2 to 5. Much higher values could generate a high e-mail traffic in operations like
# messages to groups.
cyclos.maxMailSenderThreads = 1

# Maximum threads used on sms sender. Setting to zero means no sms will be sent at all.
# Installations in which SMS will be sent should set this property to a positive value.
# The value depends on the capacity of the web service which receives the SMS requests.
cyclos.maxSmsSenderThreads = 1

# Maximum threads used on payment request sender. Setting to zero means no request will be sent at all.
# Installations in which payment requests will be used should set this property to a positive value.
# The value depends on the capacity of the web service which receives the payment requests.
cyclos.maxPaymentRequestSenderThreads = 1

####### Database access (Hibernate) configuration ########

### HSQLDB (File mode) - Does not support more than 1 active connection, and shouldn't be used in production
hibernate.dialect = org.hibernate.dialect.HSQLDialect
hibernate.connection.driver_class = org.hsqldb.jdbcDriver
hibernate.connection.url = jdbc:hsqldb:file:data/cyclos3
hibernate.connection.username = sa
hibernate.connection.password =

### MySQL
### It is very important that the same time zone is used on both web server and MySQL connection.
### If a custom time zone is set to Tomcat, please, pass the same time zone to the connection.
### See http://project.cyclos.org/wiki/index.php?title=Installation_%26_maintenance for more details.
#hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#hibernate.connection.driver_class = com.mysql.jdbc.Driver
#hibernate.connection.url = jdbc:mysql://localhost/cyclos3
#hibernate.connection.username = root
#hibernate.connection.password = 
### Connection pool ###
#hibernate.connection.provider_class = org.hibernate.connection.C3P0ConnectionProvider
#hibernate.c3p0.minPoolSize = 1
#hibernate.c3p0.maxPoolSize = 50
#hibernate.c3p0.acquireIncrement = 1
#hibernate.c3p0.idleConnectionTestPeriod = 60
#hibernate.c3p0.maxIdleTime = 3600
#hibernate.c3p0.testConnectionOnCheckout = true
#hibernate.c3p0.preferredTestQuery = select 1
#hibernate.c3p0.acquireRetryAttempts = 30
#hibernate.c3p0.acquireRetryDelay = 1000
#hibernate.c3p0.numHelperThreads = 5
#hibernate.c3p0.checkoutTimeout = 300000

### Additional properties
hibernate.current_session_context_class=org.hibernate.context.ThreadLocalSessionContext
hibernate.connection.autoReconnect = true
hibernate.connection.autoReconnectForPools = true
hibernate.connection.is-connection-validation-required = true
hibernate.default_batch_fetch_size = 1
hibernate.jdbc.batch_size = 20
hibernate.use_outer_join = true

### Second level cache settings - May be used in order to reduce the DB access, but increases memory usage 
hibernate.cache.use_second_level_cache = false
### Query cache may improve performance, but increases memory usage. Depends on hibernate.cache.use_second_level_cache
hibernate.cache.use_query_cache = false

# Indicates whether that the hostname given in the HTTPS URL will be checked against the service's Common Name (CN) given in its certificate
# during SOAP client requests
# NOT recommended for production time
cyclos.security.disableCNCheck=false

# Used to connect to servers with self-signed certificates (not issued by a CA)
# NOT recommended for production time
cyclos.security.trustAllCerts=false

# Specifies the amount of time, in milliseconds, that Cyclos will attempt to establish a connection against external web services
# before it times out. 0 specifies that Cyclos will continue to attempt to open a connection indefinitely (NOT recommended for production time).
# cyclos.webservices.connectionTimeout=

# Specifies the amount of time, in milliseconds, that Cyclos will wait for a response from the external web service
# before it times out. 0 specifies that Cyclos will wait indefinitely (NOT recommended for production time).
# cyclos.webservices.receiveTimeout=

### Show SQL in logs. Only to debug
#hibernate.show_sql = true
#hibernate.use_sql_comments = true
#hibernate.format_sql = true

### Kaptcha (generator for image with letters in public registration)
### See http://code.google.com/p/kaptcha/wiki/ConfigParameters
### Cyclos modifies the default behavior by basing the background and 
### dimensions on the images/captcha_background.png file, and never draws
### an extra border, as the captcha image is already show inside one

### Text configuration
kaptcha.textproducer.char.length=6
kaptcha.textproducer.char.string=abcde2345678gfymnpwx
kaptcha.textproducer.font.names=Serif, SansSerif, Monospaced
kaptcha.textproducer.font.color=32,32,32

### The effect used to make text harder to OCR
### A fisheye distortion 
#kaptcha.obscurificator.impl=com.google.code.kaptcha.impl.FishEyeGimpy
### A shadow below the text
kaptcha.obscurificator.impl=com.google.code.kaptcha.impl.ShadowGimpy
### Some ripples in the text
#kaptcha.obscurificator.impl=com.google.code.kaptcha.impl.WaterRipple

### Noise generator
### Random lines
#kaptcha.noise.impl=com.google.code.kaptcha.impl.DefaultNoise 
### No noise
kaptcha.noise.impl=com.google.code.kaptcha.impl.NoNoise